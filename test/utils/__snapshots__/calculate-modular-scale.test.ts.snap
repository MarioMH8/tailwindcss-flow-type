// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`tailwindcss-flow-type calculateModularScale with default options should works as expected with -4 scale value 1`] = `"clamp(0.7023319615912209rem, calc(0.7023319615912209rem + ((0.7023319615912209 - 0.7023319615912209) * ((100vw - 20rem) / (96 - 20)))), 0.7023319615912209rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with default options should works as expected with -1 scale value 1`] = `"clamp(1.0416666666666667rem, calc(1.0416666666666667rem + ((1.0416666666666667 - 1.0416666666666667) * ((100vw - 20rem) / (96 - 20)))), 1.0416666666666667rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with default options should works as expected with 0 scale value 1`] = `"clamp(1.125rem, calc(1.125rem + ((1.25 - 1.125) * ((100vw - 20rem) / (96 - 20)))), 1.25rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with default options should works as expected with 1 scale value 1`] = `"clamp(1.265625rem, calc(1.265625rem + ((1.5 - 1.265625) * ((100vw - 20rem) / (96 - 20)))), 1.5rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with default options should works as expected with 4 scale value 1`] = `"clamp(1.802032470703125rem, calc(1.802032470703125rem + ((2.5919999999999996 - 1.802032470703125) * ((100vw - 20rem) / (96 - 20)))), 2.5919999999999996rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with custom units should works as expected with -4 scale value 1`] = `"clamp(0.7023319615912209px, calc(0.7023319615912209px + ((0.7023319615912209 - 0.7023319615912209) * ((100vw - 20px) / (96 - 20)))), 0.7023319615912209px)"`;

exports[`tailwindcss-flow-type calculateModularScale with custom units should works as expected with -1 scale value 1`] = `"clamp(1.0416666666666667px, calc(1.0416666666666667px + ((1.0416666666666667 - 1.0416666666666667) * ((100vw - 20px) / (96 - 20)))), 1.0416666666666667px)"`;

exports[`tailwindcss-flow-type calculateModularScale with custom units should works as expected with 0 scale value 1`] = `"clamp(1.125px, calc(1.125px + ((1.25 - 1.125) * ((100vw - 20px) / (96 - 20)))), 1.25px)"`;

exports[`tailwindcss-flow-type calculateModularScale with custom units should works as expected with 1 scale value 1`] = `"clamp(1.265625px, calc(1.265625px + ((1.5 - 1.265625) * ((100vw - 20px) / (96 - 20)))), 1.5px)"`;

exports[`tailwindcss-flow-type calculateModularScale with custom units should works as expected with 4 scale value 1`] = `"clamp(1.802032470703125px, calc(1.802032470703125px + ((2.5919999999999996 - 1.802032470703125) * ((100vw - 20px) / (96 - 20)))), 2.5919999999999996px)"`;

exports[`tailwindcss-flow-type calculateModularScale with ratioMin and ratioMax are 1 should works as expected with -4 scale value 1`] = `"clamp(1.25rem, calc(1.25rem + ((1.25 - 1.25) * ((100vw - 20rem) / (96 - 20)))), 1.25rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with ratioMin and ratioMax are 1 should works as expected with -1 scale value 1`] = `"clamp(1.25rem, calc(1.25rem + ((1.25 - 1.25) * ((100vw - 20rem) / (96 - 20)))), 1.25rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with ratioMin and ratioMax are 1 should works as expected with 0 scale value 1`] = `"clamp(1.125rem, calc(1.125rem + ((1.25 - 1.125) * ((100vw - 20rem) / (96 - 20)))), 1.25rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with ratioMin and ratioMax are 1 should works as expected with 1 scale value 1`] = `"clamp(1.125rem, calc(1.125rem + ((1.25 - 1.125) * ((100vw - 20rem) / (96 - 20)))), 1.25rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with ratioMin and ratioMax are 1 should works as expected with 4 scale value 1`] = `"clamp(1.125rem, calc(1.125rem + ((1.25 - 1.125) * ((100vw - 20rem) / (96 - 20)))), 1.25rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with screenMin equals screenMax should works as expected with -4 scale value 1`] = `"clamp(0.7023319615912209rem, calc(0.7023319615912209rem + ((0.7023319615912209 - 0.7023319615912209) * ((100vw - 20rem) / (20 - 20)))), 0.7023319615912209rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with screenMin equals screenMax should works as expected with -1 scale value 1`] = `"clamp(1.0416666666666667rem, calc(1.0416666666666667rem + ((1.0416666666666667 - 1.0416666666666667) * ((100vw - 20rem) / (20 - 20)))), 1.0416666666666667rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with screenMin equals screenMax should works as expected with 0 scale value 1`] = `"clamp(1.125rem, calc(1.125rem + ((1.25 - 1.125) * ((100vw - 20rem) / (20 - 20)))), 1.25rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with screenMin equals screenMax should works as expected with 1 scale value 1`] = `"clamp(1.265625rem, calc(1.265625rem + ((1.5 - 1.265625) * ((100vw - 20rem) / (20 - 20)))), 1.5rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with screenMin equals screenMax should works as expected with 4 scale value 1`] = `"clamp(1.802032470703125rem, calc(1.802032470703125rem + ((2.5919999999999996 - 1.802032470703125) * ((100vw - 20rem) / (20 - 20)))), 2.5919999999999996rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with fontSizeMin and fontSizeMax are 0 should works as expected with -4 scale value 1`] = `"clamp(0rem, calc(0rem + ((0 - 0) * ((100vw - 20rem) / (96 - 20)))), 0rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with fontSizeMin and fontSizeMax are 0 should works as expected with -1 scale value 1`] = `"clamp(0rem, calc(0rem + ((0 - 0) * ((100vw - 20rem) / (96 - 20)))), 0rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with fontSizeMin and fontSizeMax are 0 should works as expected with 0 scale value 1`] = `"clamp(0rem, calc(0rem + ((0 - 0) * ((100vw - 20rem) / (96 - 20)))), 0rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with fontSizeMin and fontSizeMax are 0 should works as expected with 1 scale value 1`] = `"clamp(0rem, calc(0rem + ((0 - 0) * ((100vw - 20rem) / (96 - 20)))), 0rem)"`;

exports[`tailwindcss-flow-type calculateModularScale with fontSizeMin and fontSizeMax are 0 should works as expected with 4 scale value 1`] = `"clamp(0rem, calc(0rem + ((0 - 0) * ((100vw - 20rem) / (96 - 20)))), 0rem)"`;
